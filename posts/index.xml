<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mark的博客</title>
    <link>http://maqunchao.xyz/posts/</link>
    <description>Recent content in Posts on Mark的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Fri, 29 Nov 2019 13:48:51 +0800</lastBuildDate>
    
	<atom:link href="http://maqunchao.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTML常用标签</title>
      <link>http://maqunchao.xyz/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Fri, 29 Nov 2019 13:48:51 +0800</pubDate>
      
      <guid>http://maqunchao.xyz/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>HTML常用标签 a标签包含href, target, download, rel=noopener属性  href(hypertext reference)属性:   href后面的url,以http/https开头的，则点击a标签后,会链接该url的页面 href后是#, 点击后回到页面顶部
&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;点击回到顶部&amp;lt;/a&amp;gt;  如果href后面是//baidu.com, 浏览器先去http://www.baidu.com寻找, 找不到再去https://www.baidu.com/寻找
&amp;lt;a href=&amp;quot;//qq.com&amp;quot;&amp;gt;QQ&amp;lt;/a&amp;gt;  href后面可以跟文件路径, 如果我们http-server开启本地服务的方式打开文件, 则会根据本地服务的协议,决定使用http/https打开该文件,  如果直接双击打开,则使用file://协议打开该文件
  href做伪协议,
&amp;lt;a href=&amp;quot;javascript:&amp;quot;&amp;gt;点击后不会跳转, 无反应&amp;lt;/a&amp;gt; 如果javascript:代码,执行该代码 &amp;lt;a href=&amp;quot;mailto:邮箱&amp;quot;&amp;gt;发邮件&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;tel:手机号&amp;quot;&amp;gt;打打电话&amp;lt;/a&amp;gt;  href来做锚点,跳转到当前页面中某标签的id为xxx的页面元素
&amp;lt;a href=&amp;quot;#xxx&amp;quot;&amp;gt;xxx&amp;lt;/a&amp;gt;  target属性
在新页面打开：&amp;lt;a href=&amp;quot;url/相对路径&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;xxx&amp;lt;/a&amp;gt; &amp;lt;hr&amp;gt; 在当前页面打开：&amp;lt;a href=&amp;quot;url/相对路径&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;xxx&amp;lt;/a&amp;gt;&amp;lt;hr&amp;gt; 在父页面打开（有两个页面时）：&amp;lt;a href=&amp;quot;url/相对路径&amp;quot; target=&amp;quot;_parent&amp;quot;&amp;gt;xxx&amp;lt;/a&amp;gt;&amp;lt;hr&amp;gt; 在最顶层页面打开（有多于两个页面）：&amp;lt;a href=&amp;quot;url/相对路径&amp;quot; target=&amp;quot;_top&amp;quot;&amp;gt;xxx&amp;lt;/a&amp;gt;  download 属性
 下载页面, 不是所有浏览器都支持
  iframe标签 iframe标签用于在一个页面当中嵌套页面,但目前已经很少用了，基本都是在一些旧项目才会看到。 可以a标签进行使用,如下, 点击a标签, 则会在iframe标签内打开指定的url页面</description>
    </item>
    
    <item>
      <title>HTML入门笔记</title>
      <link>http://maqunchao.xyz/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 27 Nov 2019 06:15:34 +0800</pubDate>
      
      <guid>http://maqunchao.xyz/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>历史简介  1990年, Tim Berners-Lee发明了HTML, 自己编写了一个浏览器和服务器, 然后通过自己的浏览器访问了自己写的服务器.  HTML 起手式 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;!-- 文档类型 --&amp;gt; &amp;lt;html lang=&amp;quot;zh-CN&amp;quot;&amp;gt; &amp;lt;!-- html标签, 改成中文 --&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt; &amp;lt;!-- 文件的字符编码 --&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot; /&amp;gt; &amp;lt;!-- 禁用缩放, 兼容手机 --&amp;gt; &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot; /&amp;gt; &amp;lt;!-- 告诉IE浏览器, 使用最新版本 --&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;!-- 网页标题 --&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  常用的表示章节的标签  h1 ~ h6, 标题标签， 呈现六种不同级别的标题，由大到小 section, 章节标签， 表示一个包含在HTML文档中的独立部分 article, 表示文章 p，段落标签 header， 头部 footer，脚部，一般表示根元素的页脚 main， 主要内容 aside， 旁支内容 div， 块级元素, 可用来划分   全局属性  class, 给标签分类或者标记</description>
    </item>
    
    <item>
      <title>Hugo配合GitHub搭建博客</title>
      <link>http://maqunchao.xyz/posts/%E7%AC%AC2%E7%AF%87blog/</link>
      <pubDate>Mon, 18 Nov 2019 06:15:34 +0800</pubDate>
      
      <guid>http://maqunchao.xyz/posts/%E7%AC%AC2%E7%AF%87blog/</guid>
      <description>Hugo配合GitHub搭建博客 下载hugo  首先安装hugo 地址 配置环境变量,将存放hugo.exe的文件目录,示例:D:\SoftWare\hugo, 编辑到Path中,点击确定 验证hugo是否配置成功, 打开终端,执行hugo version, 成功如下:
hugo version Hugo Static Site Generator v0.59.1-D5DAB232 windows/amd64 BuildDate: 2019-10-31T15:22:43Z  创建GitHub仓库 github&amp;ndash;&amp;gt;右上角的new repository, 名称:你的github用户名.github.io; (记住仓库名称, 最好用英文)
 在本地硬盘, 创建一个文件夹, 选中文件夹,执行
hugo new site xxxx(GitHub仓库名称)  创建完成后, 本地文件生成一个 xxxx目录, 目录介绍: 创建完成之后的目录介绍： |- archetypes 存放default.md ,头文件格式 |-content content 目录存放博客文章（.markdown/.md文件） |-data 存放自定义模板，导入的toml文件（或json、yaml） |-layouts layouts目录存放网站的网站模板文件 |-static 存放js/css/img 等静态资源 |-config.toml config.toml 是网站的配置文件
 然后 cd xxxx(目录下)
 执行 git init; 初始化本地仓库
 添加一个默认的主题 命令行执行</description>
    </item>
    
    <item>
      <title>git基本操作</title>
      <link>http://maqunchao.xyz/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Mon, 18 Nov 2019 00:15:34 +0800</pubDate>
      
      <guid>http://maqunchao.xyz/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      <description>git基本使用  git init ; 初始化 创建一个.git目录 当本地仓库 git add 文件路径; 选择变化的文件进行提交 .gitignore; 描述那些文件是不需要提交的 git commit -v; 提交已经添加的文件, 并打开编辑器编写日志; 也可git commit -m 字符串; 在命令行中说明理由并提交, 如果字符串中有空格需要用引号括起来 git log; 打印出已经提交的各个版本信息(带有版本号); git reset &amp;ndash;hard 版本号(git log查询出来的); 回退到某个版本 git reflog; 打印历史变更的所以版本,以及版本号 git branch x(分支名称); 基于当前commit创建一个新的分支,我在那个分支提交,代码就在那个分支 git checkout x(分支名称); 用于切换分支 合并分支:首先进入要保留的分支; 运行 git merge x(需要合并的名称) 进行合并, 合并完成后删除无用分支 git branch -d x(分支名称) git add . 提交当前目录所以文件 git branch; 可显示当前在那个分支 git status -sb; 显示冲突文件  git与github远程仓库配合使用 生成ssh key  运行ssh-keygen -t rsa -b 4096 -C 自己的邮箱 cat ~/.</description>
    </item>
    
  </channel>
</rss>